import { useState } from 'react';
import { Button } from '@/components/ui/button';

function Toggle({ checked, onChange }: { checked: boolean; onChange: () => void }) {
  return (
    <button
      type="button"
      onClick={onChange}
      className={`relative w-12 h-7 rounded-full transition-colors duration-200 focus:outline-none ${checked ? 'bg-primary' : 'bg-muted'}`}
      aria-pressed={checked}
    >
      <span
        className={`absolute left-1 top-1 w-5 h-5 rounded-full bg-card border border-border shadow transition-transform duration-200 ${checked ? 'translate-x-5' : ''}`}
      />
    </button>
  );
}

const options = [
  {
    key: 'profileVisibility',
    title: 'Profile Visibility',
    description:
      'Choose whether your profile is visible to everyone or just your contacts. Public profiles are viewable by all, making it easier to connect with new people. Private profiles are only visible to those you approve, giving you control over your information.',
  },
  {
    key: 'shareData',
    title: 'Share Data with Partners',
    description:
      'Allow us to share your data with trusted partners for personalized promotions and offers. This helps us provide you with relevant content, discounts, and services tailored to your interests.',
  },
  {
    key: 'emailUpdates',
    title: 'Receive Email Updates',
    description:
      'Opt in to receive updates on the latest features, exciting promotions, and important news directly to your email. Stay informed and take advantage of exclusive offers and updates designed to enhance your experience with us.',
  },
  {
    key: 'twoFactor',
    title: 'Enable Two-Factor Authentication',
    description:
      'Enhance the security of your account by enabling Two-Factor Authentication (2FA). This feature adds an extra layer of protection by requiring not only your password but also a second form of verification, such as a code sent to your mobile device or generated by an authentication app. Enabling 2FA significantly reduces the risk of unauthorized access to your account, ensuring that only you can log in, even if someone else has your password.',
  },
  {
    key: 'encryption',
    title: 'Use Data Encryption',
    description:
      'Enable data encryption to protect your information from unauthorized access. By turning on this feature, all data transmitted between your device and our servers is encrypted, making it virtually impossible for hackers to intercept and read your data. This ensures that your personal information, including login credentials, messages, and other sensitive data, is kept secure and private.',
  },
  {
    key: 'analytics',
    title: 'Allow Analytics',
    description:
      'Enable third-party analytics services to help us gain insights into user behavior and improve our app’s performance. By allowing these services, we can collect and analyze data on how you interact with the app, such as which features you use most, how you navigate through the interface, and where you might encounter issues. This information is crucial for us to identify trends, enhance user experience, and make data-driven decisions to optimize the app’s functionality and usability.',
  },
  {
    key: 'ads',
    title: 'Personalized Ads',
    description:
      'Allow us to show you personalized ads based on your interests and browsing behavior. By enabling this feature, you consent to the use of data collected from your interactions within the app and across other platforms to deliver ads that are more relevant to you.',
  },
];

export function SettingsDataPrivacySection() {
  const [toggles, setToggles] = useState({
    profileVisibility: true,
    shareData: false,
    emailUpdates: true,
    twoFactor: true,
    encryption: true,
    analytics: true,
    ads: true,
  });

  function handleToggle(key: string) {
    setToggles(t => ({ ...t, [key]: !t[key as keyof typeof t] }));
  }

  function handleCancel() {
    // Optionally reset to initial state
  }

  function handleSave(e: React.FormEvent) {
    e.preventDefault();
    // Save logic here
  }

  return (
    <form className="max-w-3xl" onSubmit={handleSave}>
      <h2 className="text-2xl font-bold mb-2">Data & Privacy</h2>
      <p className="text-muted-foreground mb-8">Choose how we use your data</p>
      <p className="text-foreground mb-8">Your data is important for helping improve and personalize this platform, and you have control over how it is used. You can change these settings anytime if you feel like playing a part in our development.</p>
      <div className="space-y-4 mb-8">
        {options.map(opt => (
          <div key={opt.key} className="bg-card border border-border rounded-xl p-6 flex items-center justify-between">
            <div className="flex-1">
              <div className="font-semibold text-lg mb-1">{opt.title}</div>
              <div className="text-muted-foreground text-sm">{opt.description}</div>
            </div>
            <Toggle checked={toggles[opt.key as keyof typeof toggles]} onChange={() => handleToggle(opt.key)} />
          </div>
        ))}
      </div>
      <div className="flex justify-end gap-4 mt-8">
        <Button type="button" variant="outline" onClick={handleCancel}>Cancel</Button>
        <Button type="submit" className="bg-primary hover:bg-primary/90 text-primary-foreground px-8 h-12 text-lg">Save Changes</Button>
      </div>
    </form>
  );
} 